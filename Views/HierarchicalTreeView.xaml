<UserControl x:Class="EasyPlaylist.Views.HierarchicalTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EasyPlaylist.Views"
             xmlns:vm="clr-namespace:EasyPlaylist.ViewModels"
             xmlns:enums="clr-namespace:EasyPlaylist.Enums"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:controls="clr-namespace:EasyPlaylist.Views"
             xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500"
             Loaded="UserControl_Loaded"
             x:Name="HierarchicalTreeView_UserControl">
    <DockPanel>
        <StackPanel x:Name="HierarchicalTree_Buttons" DockPanel.Dock="Top">
            <DockPanel>
                <TextBox DockPanel.Dock="Right" x:Name="TextBox_Search" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Delay=500}" Width="100">
                </TextBox>
                <StackPanel  Orientation="Horizontal">
                    <Fluent:Button
                            Header="Playlist settings" 
                            Icon="pack://application:,,,/Icones/RenamePagePublisher.png" 
                            LargeIcon="pack://application:,,,/Icones/RenamePagePublisher.png"
                            Width="Auto" HorizontalAlignment="Left"
                            SizeDefinition="Middle"
                            Command="{Binding OpenPlaylistSettings}"
                            Visibility="{Binding IsEditable, Converter={StaticResource FalseToCollapsedVisibilityConverter}}">
                    </Fluent:Button>
                    <Fluent:Button
                            Header="Export playlist" 
                            Icon="pack://application:,,,/Icones/TableExportMenu.png" 
                            LargeIcon="pack://application:,,,/Icones/TableExportMenu.png"
                            Width="Auto" HorizontalAlignment="Left"
                            SizeDefinition="Middle"
                            Command="{Binding Export}"
                            Visibility="{Binding IsEditable, Converter={StaticResource FalseToCollapsedVisibilityConverter}}">
                    </Fluent:Button>
                </StackPanel>
            </DockPanel>
            <StackPanel Orientation="Horizontal" 
                        Visibility="{Binding IsEditable, Converter={StaticResource FalseToCollapsedVisibilityConverter}}">
                <Fluent:Button
                            Header="Add folder" 
                            Icon="pack://application:,,,/Icones/AddFolder.png" 
                            LargeIcon="pack://application:,,,/Icones/AddFolder.png"
                            Width="Auto" HorizontalAlignment="Left"
                            SizeDefinition="Middle"
                            Command="{Binding OpenAddFolderPopup}">
                </Fluent:Button>
                <Fluent:Button
                            Header="Rename selected" 
                            Icon="pack://application:,,,/Icones/Rename.png" 
                            LargeIcon="pack://application:,,,/Icones/Rename.png"
                            Width="Auto" HorizontalAlignment="Left"
                            SizeDefinition="Middle"
                            Command="{Binding RenameSelectedItem}"
                            IsEnabled="{Binding SelectedItem, Converter={StaticResource NullToFalseConverter}}">
                </Fluent:Button>
                <Fluent:Button
                            Header="Remove selected" 
                            Icon="pack://application:,,,/Icones/RecordsDeleteRecord.png" 
                            LargeIcon="pack://application:,,,/Icones/RecordsDeleteRecord.png"
                            Width="Auto" HorizontalAlignment="Left"
                            SizeDefinition="Middle"
                            Command="{Binding RemoveSelectedItem}"
                            IsEnabled="{Binding SelectedItem, Converter={StaticResource NullToFalseConverter}}">
                </Fluent:Button>
            </StackPanel>
        </StackPanel>
        <telerik:RadTreeView
                x:Name="HierarchicalTree"
                ItemsSource="{Binding RootFolders}" 
                SelectionMode="Single" 
                SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                IsDragDropEnabled="True"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                telerik:AnimationManager.IsAnimationEnabled="False"
                IsExpandOnDblClickEnabled="True"
                telerik:TextSearch.TextPath="Title"
                DataContextChanged="HierarchicalTree_DataContextChanged"
                PreviewCollapsed="HierarchicalTree_PreviewCollapsed" FontSize="14">
            <!--On définit la hauteur du composant en la calculant car elle ne s'adapte pas correctement avec le RadTabControl et les DockPanel-->
            <telerik:RadTreeView.Height>
                <MultiBinding Converter="{StaticResource MultiAddValueConverter}">
                    <!--Hauteur du RadTabControl-->
                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type telerik:RadTabControl}}" Path="ActualHeight" />
                    <!--Hauteur des onglets du RadTabControl-->
                    <Binding>
                        <Binding.Source>
                            <sys:Double>-30</sys:Double>
                        </Binding.Source>
                    </Binding>
                    <!--Hauteur des boutons-->
                    <Binding ElementName="HierarchicalTree_Buttons" Path="ActualHeight" Converter="{StaticResource InverseValueConverter}" />
                </MultiBinding>
            </telerik:RadTreeView.Height>
            <telerik:RadTreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Items}">
                    <HierarchicalDataTemplate.ItemContainerStyle>
                        <Style TargetType="{x:Type telerik:RadTreeViewItem}" BasedOn="{StaticResource RadTreeViewItemStyle}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                            <Setter Property="MinHeight" Value="10"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ExistsInPlaylistStatus}" Value="{x:Static enums:ExistsInPlaylistStatusEnum.Default}">
                                    <Setter Property="Foreground" Value="Black" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExistsInPlaylistStatus}" Value="{x:Static enums:ExistsInPlaylistStatusEnum.Exists}">
                                    <Setter Property="Foreground" Value="Green" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExistsInPlaylistStatus}" Value="{x:Static enums:ExistsInPlaylistStatusEnum.NotExists}">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExistsInPlaylistStatus}" Value="{x:Static enums:ExistsInPlaylistStatusEnum.PartialExists}">
                                    <Setter Property="Foreground" Value="Orange" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsRecent}" Value="True">
                                    <Setter Property="Background" Value="#FFFFFFBB" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsRecent}" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSearchResult}" Value="False">
                                    <Setter Property="Opacity" Value="0.4" />
                                    <Setter Property="FontSize" Value="12" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSearchResult}" Value="True">
                                    <Setter Property="Opacity" Value="1" />
                                    <Setter Property="FontSize" Value="14" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </HierarchicalDataTemplate.ItemContainerStyle>
                    <TextBlock Text="{Binding Title}">
                            <!--<telerik:RadContextMenu.ContextMenu>
                                <telerik:RadContextMenu>
                                    <telerik:RadMenuItem 
                                        Header="Rename" 
                                        Command="{Binding Rename}" />
                                    <telerik:RadMenuItem 
                                        Header="Delete" 
                                        Command="{Binding RemoveSelectedItem}"/>
                                </telerik:RadContextMenu>
                            </telerik:RadContextMenu.ContextMenu>-->
                    </TextBlock>
                </HierarchicalDataTemplate>
            </telerik:RadTreeView.ItemTemplate>
        </telerik:RadTreeView>
    </DockPanel>

</UserControl>
